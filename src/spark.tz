# spark.tz: A deflationary token on the Tezos blockchain
#           achieved through burning a portion of transferred tokens

# pair of recipient address and amount to transfer
parameter (pair address nat);

# pair of ledger map (address -> balance) and total token supply
storage (pair (big_map address nat) nat);

code {
       # Don't send any tez to the contract
       # stack = (pair parameter storage) : []
       PUSH mutez 0;
       AMOUNT;
       IFCMPNEQ { PUSH string "Please don't send any XTZ"; FAILWITH }
                {};
       UNPAIR;
       DIP { UNPAIR };
       SWAP;

       # Sender in the ledger?
       # stack = big_map : (pair recipient amount) : totalSupply : []
       DUP;
       SENDER;
       GET;
       IF_NONE { PUSH string "Sender address not found."; FAILWITH }
               {
                 DUP;
                 DIP 3 { UNPAIR };
                 DIP 4 { DUP };
                 DIG 4;

                 # Enough balance?
                 IFCMPGT { PUSH string "Not enough balance."; FAILWITH }
                         {
                           # Update sender balance
                           # stack = balance : big_map : recipient : amount : totalSupply : []
                           DIP 3 { DUP };
                           DIG 3;
                           SWAP;
                           SUB;
                           ABS;
                           SOME;
                           SENDER;
                           UPDATE;
                         };
               };

       # Burn 2% of transfer
       # stack = big_map : recipient : amount : totalSupply : []
       # stack = supply : amount : big_map : recipient : []
       DUG 3;
       DUG 3;
       DUP;
       PUSH nat 50;
       SWAP;
       EDIV;
       IF_NONE { PUSH string "Error while burning."; FAILWITH }
               {
                 CAR;
                 DUP;
                 DIG 3;
                 SUB;
                 ABS;
                 DIP { SWAP; SUB; ABS; };
                 SWAP;
                 DUG 3;
                 DUG 3
               };

       # Is recipient in the ledger?
       # If yes, update balance. If no, register and add balance.
       # stack = big_map : recipient : amountToAdd : newTotalSupply : []
       DUP;
       DIP 2 { DUP };
       DIG 2;
       GET;
       IF_SOME {
                 DIG 3;
                 ADD;
                 DIG 2;
               }
               { DUG 2 };
       DIP { SOME };
       UPDATE;
       PAIR;
       NIL operation;
       PAIR;
     }
